import React, { createContext, useContext, useState, ReactNode } from 'react';

type Language = 'te' | 'en';

interface LanguageContextType {
  language: Language;
  toggleLanguage: () => void;
  t: (key: string) => string;
}

const LanguageContext = createContext<LanguageContextType | undefined>(undefined);

const translations = {
  te: {
    // Navigation
    home: '‡∞π‡±ã‡∞Æ‡±ç',
    about: '‡∞Æ‡∞æ ‡∞ó‡±Å‡∞∞‡∞ø‡∞Ç‡∞ö‡∞ø',
    profile: '‡∞™‡±ç‡∞∞‡±ä‡∞´‡±à‡∞≤‡±ç',
    login: '‡∞≤‡∞æ‡∞ó‡∞ø‡∞®‡±ç',
    back: '‡∞µ‡±Ü‡∞®‡±Å‡∞ï‡∞ï‡±Å',
    converter: '‡∞Ö‡∞®‡±Å‡∞µ‡∞æ‡∞¶‡∞Ç',
    
    // Home page
    siteTitle: '‡∞®‡∞æ ‡∞ä‡∞∞‡±Å, ‡∞®‡∞æ ‡∞∏‡±ç‡∞µ‡∞∞‡∞Ç',
    siteSubtitle: '‡∞Æ‡±Ä ‡∞™‡±ç‡∞∞‡∞æ‡∞Ç‡∞§‡∞æ‡∞®‡±ç‡∞®‡∞ø ‡∞µ‡∞ø‡∞µ‡∞∞‡∞ø‡∞Ç‡∞ö‡∞Ç‡∞°‡∞ø ‡∞≤‡±á‡∞¶‡∞æ ‡∞Æ‡±Ä ‡∞∏‡∞Ç‡∞™‡±ç‡∞∞‡∞¶‡∞æ‡∞Ø‡∞æ‡∞®‡±ç‡∞®‡∞ø ‡∞§‡±Ü‡∞≤‡±Å‡∞ó‡±Å‡∞≤‡±ã ‡∞™‡∞Ç‡∞ö‡±Å‡∞ï‡±ã‡∞Ç‡∞°‡∞ø üìú',
    culture: 'üèõÔ∏è ‡∞∏‡∞Ç‡∞∏‡±ç‡∞ï‡±É‡∞§‡∞ø',
    traditions: 'üé≠ ‡∞∏‡∞Ç‡∞™‡±ç‡∞∞‡∞¶‡∞æ‡∞Ø‡∞æ‡∞≤‡±Å',
    stories: 'üó£Ô∏è ‡∞ï‡∞•‡∞≤‡±Å',
    places: 'üìç ‡∞∏‡±ç‡∞•‡∞≤‡∞æ‡∞≤‡±Å',
    writeStory: '‚úçÔ∏è ‡∞Æ‡±Ä ‡∞ï‡∞•‡∞®‡±Å ‡∞µ‡±ç‡∞∞‡∞æ‡∞Ø‡∞Ç‡∞°‡∞ø',
    storyTitle: '‡∞ï‡∞• ‡∞∂‡±Ä‡∞∞‡±ç‡∞∑‡∞ø‡∞ï',
    district: '‡∞ú‡∞ø‡∞≤‡±ç‡∞≤‡∞æ / ‡∞™‡±ç‡∞∞‡∞æ‡∞Ç‡∞§‡∞Ç',
    selectDistrict: '‡∞Æ‡±Ä ‡∞ú‡∞ø‡∞≤‡±ç‡∞≤‡∞æ‡∞®‡±Å ‡∞é‡∞Ç‡∞ö‡±Å‡∞ï‡±ã‡∞Ç‡∞°‡∞ø',
    yourStory: '‡∞Æ‡±Ä ‡∞ï‡∞•',
    storyPlaceholder: '‡∞Æ‡±Ä ‡∞ä‡∞∞‡∞ø ‡∞ó‡±Å‡∞∞‡∞ø‡∞Ç‡∞ö‡∞ø, ‡∞∏‡∞Ç‡∞™‡±ç‡∞∞‡∞¶‡∞æ‡∞Ø‡∞æ‡∞≤ ‡∞ó‡±Å‡∞∞‡∞ø‡∞Ç‡∞ö‡∞ø, ‡∞≤‡±á‡∞¶‡∞æ ‡∞è‡∞¶‡±à‡∞®‡∞æ ‡∞™‡±ç‡∞∞‡∞§‡±ç‡∞Ø‡±á‡∞ï‡∞Æ‡±à‡∞® ‡∞µ‡∞ø‡∞∑‡∞Ø‡∞Ç ‡∞ó‡±Å‡∞∞‡∞ø‡∞Ç‡∞ö‡∞ø ‡∞µ‡±ç‡∞∞‡∞æ‡∞Ø‡∞Ç‡∞°‡∞ø...',
    shareStory: '‡∞ï‡∞•‡∞®‡±Å ‡∞™‡∞Ç‡∞ö‡±Å‡∞ï‡±ã‡∞Ç‡∞°‡∞ø üåü',
    otherStories: 'üèõÔ∏è ‡∞á‡∞§‡∞∞ ‡∞ï‡∞•‡∞≤‡±Å ‡∞Æ‡∞∞‡∞ø‡∞Ø‡±Å ‡∞∏‡∞Ç‡∞™‡±ç‡∞∞‡∞¶‡∞æ‡∞Ø‡∞æ‡∞≤‡±Å',
    noStories: '‡∞á‡∞Ç‡∞ï‡∞æ ‡∞ï‡∞•‡∞≤‡±Å ‡∞≤‡±á‡∞µ‡±Å',
    noStoriesDesc: '‡∞Æ‡±Ä‡∞∞‡±á ‡∞Æ‡±ä‡∞¶‡∞ü‡∞ø ‡∞ï‡∞•‡∞®‡±Å ‡∞™‡∞Ç‡∞ö‡±Å‡∞ï‡±ã‡∞Ç‡∞°‡∞ø! üåü',
    thankYou: 'üôè ‡∞ß‡∞®‡±ç‡∞Ø‡∞µ‡∞æ‡∞¶‡∞æ‡∞≤‡±Å',
    thankYouDesc: '‡∞Æ‡±Ä ‡∞∏‡∞Ç‡∞∏‡±ç‡∞ï‡±É‡∞§‡∞ø‡∞®‡∞ø ‡∞Æ‡∞∞‡∞ø‡∞Ø‡±Å ‡∞∏‡∞Ç‡∞™‡±ç‡∞∞‡∞¶‡∞æ‡∞Ø‡∞æ‡∞≤‡∞®‡±Å ‡∞≠‡∞æ‡∞ó‡∞∏‡±ç‡∞µ‡∞æ‡∞Æ‡±ç‡∞Ø‡∞Ç ‡∞ö‡±á‡∞∏‡∞ø‡∞®‡∞Ç‡∞¶‡±Å‡∞ï‡±Å ‡∞ß‡∞®‡±ç‡∞Ø‡∞µ‡∞æ‡∞¶‡∞æ‡∞≤‡±Å. ‡∞Æ‡±Ä ‡∞ï‡∞•‡∞≤‡±Å ‡∞Æ‡∞® ‡∞µ‡∞æ‡∞∞‡∞∏‡∞§‡±ç‡∞µ‡∞æ‡∞®‡±ç‡∞®‡∞ø ‡∞≠‡∞µ‡∞ø‡∞∑‡±ç‡∞Ø‡∞§‡±ç ‡∞§‡∞∞‡∞æ‡∞≤‡∞ï‡±Å ‡∞Ö‡∞Ç‡∞¶‡∞ø‡∞Ç‡∞ö‡∞°‡∞Ç‡∞≤‡±ã ‡∞∏‡∞π‡∞æ‡∞Ø‡∞™‡∞°‡∞§‡∞æ‡∞Ø‡∞ø.',
    
    // About page
    aboutTitle: '‡∞Æ‡∞æ ‡∞ó‡±Å‡∞∞‡∞ø‡∞Ç‡∞ö‡∞ø üåü',
    aboutSubtitle: '"‡∞®‡∞æ ‡∞ä‡∞∞‡±Å, ‡∞®‡∞æ ‡∞∏‡±ç‡∞µ‡∞∞‡∞Ç" ‡∞™‡±ç‡∞∞‡∞æ‡∞ú‡±Ü‡∞ï‡±ç‡∞ü‡±ç ‡∞§‡±Ü‡∞≤‡±Å‡∞ó‡±Å ‡∞∏‡∞Ç‡∞∏‡±ç‡∞ï‡±É‡∞§‡∞ø‡∞®‡∞ø ‡∞Æ‡∞∞‡∞ø‡∞Ø‡±Å ‡∞∏‡∞Ç‡∞™‡±ç‡∞∞‡∞¶‡∞æ‡∞Ø‡∞æ‡∞≤‡∞®‡±Å ‡∞°‡∞ø‡∞ú‡∞ø‡∞ü‡∞≤‡±ç ‡∞Ø‡±Å‡∞ó‡∞Ç‡∞≤‡±ã ‡∞™‡∞∞‡∞ø‡∞∞‡∞ï‡±ç‡∞∑‡∞ø‡∞Ç‡∞ö‡∞°‡∞æ‡∞®‡∞ø‡∞ï‡∞ø ‡∞í‡∞ï ‡∞Ö‡∞¶‡±ç‡∞≠‡±Å‡∞§‡∞Æ‡±à‡∞® ‡∞µ‡±á‡∞¶‡∞ø‡∞ï.',
    ourMission: '‡∞Æ‡∞æ ‡∞≤‡∞ï‡±ç‡∞∑‡±ç‡∞Ø‡∞Ç',
    
    // Common
    incompleteInfo: '‡∞Ö‡∞∏‡∞Ç‡∞™‡±Ç‡∞∞‡±ç‡∞£ ‡∞∏‡∞Æ‡∞æ‡∞ö‡∞æ‡∞∞‡∞Ç',
    fillAllFields: '‡∞¶‡∞Ø‡∞ö‡±á‡∞∏‡∞ø ‡∞Ö‡∞®‡±ç‡∞®‡∞ø ‡∞´‡±Ä‡∞≤‡±ç‡∞°‡±ç‚Äå‡∞≤‡∞®‡±Å ‡∞™‡±Ç‡∞∞‡±ç‡∞§‡∞ø ‡∞ö‡±á‡∞Ø‡∞Ç‡∞°‡∞ø',
    storyAdded: '‡∞ï‡∞• ‡∞ú‡±ã‡∞°‡∞ø‡∞Ç‡∞ö‡∞¨‡∞°‡∞ø‡∞Ç‡∞¶‡∞ø! üéâ',
    storyShared: '‡∞Æ‡±Ä ‡∞ï‡∞• ‡∞µ‡∞ø‡∞ú‡∞Ø‡∞µ‡∞Ç‡∞§‡∞Ç‡∞ó‡∞æ ‡∞≠‡∞æ‡∞ó‡∞∏‡±ç‡∞µ‡∞æ‡∞Æ‡±ç‡∞Ø‡∞Ç ‡∞ö‡±á‡∞Ø‡∞¨‡∞°‡∞ø‡∞Ç‡∞¶‡∞ø',
    audioStory: '‡∞Ü‡∞°‡∞ø‡∞Ø‡±ã ‡∞ï‡∞•',
    audioRecordingDesc: '‡∞á‡∞¶‡∞ø ‡∞í‡∞ï ‡∞Ü‡∞°‡∞ø‡∞Ø‡±ã ‡∞∞‡∞ø‡∞ï‡∞æ‡∞∞‡±ç‡∞°‡∞ø‡∞Ç‡∞ó‡±ç. ‡∞µ‡∞ø‡∞®‡∞°‡∞æ‡∞®‡∞ø‡∞ï‡∞ø ‡∞™‡±ç‡∞≤‡±á ‡∞¨‡∞ü‡∞®‡±ç ‡∞®‡±ä‡∞ï‡±ç‡∞ï‡∞Ç‡∞°‡∞ø.',
    unknownDistrict: '‡∞§‡±Ü‡∞≤‡∞ø‡∞Ø‡∞®‡∞ø ‡∞ú‡∞ø‡∞≤‡±ç‡∞≤‡∞æ'
  },
  en: {
    // Navigation
    home: 'Home',
    about: 'About Us',
    profile: 'Profile',
    login: 'Login',
    back: 'Back',
    converter: 'Convert',
    
    // Home page
    siteTitle: 'My Region, My Voice',
    siteSubtitle: 'Describe your region or share your traditions in your language üìú',
    culture: 'üèõÔ∏è Culture',
    traditions: 'üé≠ Traditions',
    stories: 'üó£Ô∏è Stories',
    places: 'üìç Places',
    writeStory: '‚úçÔ∏è Write Your Story',
    storyTitle: 'Story Title',
    district: 'District / Region',
    selectDistrict: 'Select your district',
    yourStory: 'Your Story',
    storyPlaceholder: 'Write about your village, traditions, or any special aspects of your region...',
    shareStory: 'Share Story üåü',
    otherStories: 'üèõÔ∏è Other Stories and Traditions',
    noStories: 'No stories yet',
    noStoriesDesc: 'Be the first to share a story! üåü',
    thankYou: 'üôè Thank You',
    thankYouDesc: 'Thank you for sharing your culture and traditions. Your stories help preserve our heritage for future generations.',
    
    // About page
    aboutTitle: 'About Us üåü',
    aboutSubtitle: '"My Region, My Voice" project is a wonderful platform to preserve Telugu culture and traditions in the digital age.',
    ourMission: 'Our Mission',
    
    // Common
    incompleteInfo: 'Incomplete Information',
    fillAllFields: 'Please fill all fields',
    storyAdded: 'Story Added! üéâ',
    storyShared: 'Your story has been shared successfully',
    audioStory: 'Audio Story',
    audioRecordingDesc: 'This is an audio recording. Click play button to listen.',
    unknownDistrict: 'Unknown District'
  }
};

export const LanguageProvider: React.FC<{ children: ReactNode }> = ({ children }) => {
  const [language, setLanguage] = useState<Language>('te');

  const toggleLanguage = () => {
    setLanguage(prev => prev === 'te' ? 'en' : 'te');
  };

  const t = (key: string): string => {
    return translations[language][key as keyof typeof translations['te']] || key;
  };

  return (
    <LanguageContext.Provider value={{ language, toggleLanguage, t }}>
      {children}
    </LanguageContext.Provider>
  );
};

export const useLanguage = () => {
  const context = useContext(LanguageContext);
  if (context === undefined) {
    throw new Error('useLanguage must be used within a LanguageProvider');
  }
  return context;
};